import { ApiProperty } from "@nestjs/swagger";

class AsyncResponseDataDto {
  @ApiProperty({
    example: "Pipeline job accepted. Check status using the jobId.",
    description: "A message confirming the job was accepted.",
  })
  message: string;

  @ApiProperty({
    example: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
    description: "The unique ID of the job in the queue.",
  })
  jobId: string;

  @ApiProperty({
    example: "unique-client-request-id-12345",
    description: "The request ID provided by the client for idempotency.",
  })
  requestId: string;
}

export class AsyncPipelineResponseDto {
  @ApiProperty({ type: AsyncResponseDataDto })
  data: AsyncResponseDataDto;
}

class SyncResponseDataDto {
  @ApiProperty({
    example: "ФИНАЛЬНЫЙ ОТЧЁТ...",
    description: "The full final report generated by the pipeline.",
  })
  fullResponse: string;

  @ApiProperty({
    example: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
    description: "The unique ID of the job in the queue.",
  })
  jobId: string;

  @ApiProperty({
    example: "unique-client-request-id-12345",
    description: "The request ID provided by the client for idempotency.",
  })
  requestId: string;
}

export class SyncPipelineResponseDto {
  @ApiProperty({ type: SyncResponseDataDto })
  data: SyncResponseDataDto;
}

class JobStatusDataDto {
  @ApiProperty({ example: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d" })
  jobId: string;

  @ApiProperty({
    example: "completed",
    description: "Can be: waiting, active, completed, failed, delayed.",
  })
  state: string;

  @ApiProperty({ example: 0 })
  progress: number;

  @ApiProperty({ example: "ФИНАЛЬНЫЙ ОТЧЁТ...", nullable: true })
  result: string | null;

  @ApiProperty({ example: null, nullable: true })
  failedReason: string | null;
}

export class JobStatusResponseDto {
  @ApiProperty({ type: JobStatusDataDto })
  data: JobStatusDataDto;
}

class PipelineRunDto {
  @ApiProperty({
    example: "68ac3f0b2d2e0264464699ed",
    description: "The unique ID of the document in MongoDB.",
  })
  _id: string;

  @ApiProperty({
    example: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
    description: "The unique ID of the job in the queue.",
  })
  jobId: string;

  @ApiProperty({
    example: "unique-client-request-id-12345",
    description: "The idempotency key provided by the client.",
  })
  requestId: string;

  @ApiProperty({
    example: "completed",
    description: "The final status of the pipeline run.",
  })
  status: string;

  @ApiProperty({ example: "NVIDIA" })
  companyName: string;

  @ApiProperty({ example: "GPU and AI Hardware Manufacturing" })
  businessDomain: string;

  @ApiProperty({
    description:
      "An object containing the outputs of intermediate agent steps.",
    type: "object",
    additionalProperties: true,
    example: {
      identification: "Customer identified: EPAM Systems...",
      osint: "OSINT research for EPAM Systems...",
      parsing: "Intermediary: Tech Solutions...",
      profiling: "Project type and profile...",
      tutoring: "Technical questions: ...",
    },
  })
  intermediateSteps: Record<string, any>;

  @ApiProperty({
    example: "ФИНАЛЬНЫЙ ОТЧЁТ...",
    description: "The full final report.",
    nullable: true,
  })
  finalReport?: string;

  @ApiProperty({
    example: null,
    description: "The error message if the job failed.",
    nullable: true,
  })
  errorMessage?: string;

  @ApiProperty({ description: "The timestamp when the document was created." })
  createdAt: Date;

  @ApiProperty({
    description: "The timestamp when the document was last updated.",
  })
  updatedAt: Date;
}

export class PipelineResultResponseDto {
  @ApiProperty({ type: PipelineRunDto })
  data: PipelineRunDto;
}
